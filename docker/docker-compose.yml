version: '3'
services:
  # 
  # indy-django
  # 
  indy-django:
    image: anonsolutions/indy-community
    networks:
      - anon
      - von
    ports:
      - 8000:8000
    volumes:
      - "..:/home/indy/atria-calendar"
    depends_on:
      - dummy-cloud-agent
      - wallet-db
    command: >
        /bin/bash -c "
        echo waiting for dependencies ...;
        sleep 5;
        cd atria-calendar/atriaapp;
        touch db.sqlite3;
        DJANGO_SETTINGS_MODULE=atriaapp.docker_settings ./reload_db.sh;
        sleep 5;
        DJANGO_SETTINGS_MODULE=atriaapp.docker_settings ./init_data.sh;
        sleep 5;
        DJANGO_SETTINGS_MODULE=atriaapp.docker_settings python manage.py runserver 0.0.0.0:8000 & disown;
        sleep 5;
        DJANGO_SETTINGS_MODULE=atriaapp.docker_settings python manage.py process_tasks;"

  indy-shell:
    image: anonsolutions/indy-community
    networks:
      - anon
      - von
    ports:
      - 8001:8000
    volumes:
      - "..:/home/indy/atria-calendar"
    depends_on:
      - dummy-cloud-agent
      - wallet-db
      - indy-shell2
    command: 
      - /bin/bash

  indy-shell2:
    image: anonsolutions/indy-community
    networks:
      - anon
      - von
    ports:
      - 8001:8000
    volumes:
      - "..:/home/indy/atria-calendar"
    depends_on:
      - dummy-cloud-agent
      - wallet-db
    command: 
      - /bin/bash

  # 
  # dummy-cloud-agent
  #
  dummy-cloud-agent:
    image: anonsolutions/indy-community
    networks:
      - anon
      - von
    ports:
      - 8080:8080
      - 8081:8081
    volumes:
      - "..:/home/indy/atria-calendar"
    command: 
      indy-dummy-agent atria-calendar/dummy-cloud-agent/docker-config.json

  # 
  # stand-alone CLI
  #
  indy-cli:
    image: anonsolutions/indy-community
    networks:
      - von
    volumes:
      - "..:/home/indy/atria-calendar"
    depends_on:
      - dummy-cloud-agent
      - wallet-db
    command: 
      indy-cli

  # 
  # wallet-db
  # 
  wallet-db:
    image: postgres
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    networks:
      - anon
    ports:
      - 5432:5432
    volumes:
      - indy-wallet-db:/var/lib/pgsql/data     
    #command:
    #  postgres -c 'log_statement=all' -c 'logging_collector=on' -c 'log_destination=stderr'

networks:
  anon:
  von:
    external:
      name: von_von

volumes:
  indy-wallet-db:
